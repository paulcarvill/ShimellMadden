{% comment %}

  Rich snippets (itemscope, itemtype, etc.) for products are a theme requirement,
  and allow search engines to easily understand what the content is.

  For more information on these Scheme.org tags, visit:
    - http://schema.org/docs/gs.html

{% endcomment %}

<div itemscope itemtype="http://schema.org/Product">

  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
  <meta itemprop="image" content="{{ product.featured_image.src | img_url: 'grande' }}">

{% comment %}  {% include 'breadcrumb' %}{% endcomment %}

  <div class="grid--rev">

    






    <div class="grid-item large--three-quarters text-center">
      <div class="product-photo-container" id="productPhoto">
        {% assign featured_image = product.selected_or_first_available_variant.featured_image | default: product.featured_image %}
        <img src="{{ featured_image | img_url: '1024x1024' }}" alt="{{ featured_image.alt | escape }}" id="productPhotoImg">
      
        {% if collection %}
        <div id="projectnav">
          <p id="prev">
            {% if collection.previous_product %}
            <a href="{{collection.previous_product }}">
              <svg id="icon-arrow_small_left_idle" viewBox="0 0 1024 1024"><path class="path1" d="M486.4 738.743l51.2-51.2-149.943-138.971h380.343v-73.143h-380.343l149.943-138.971-51.2-51.2-248.686 226.743z" />
        <path class="path2" d="M0 512c0 281.6 230.4 512 512 512s512-230.4 512-512-230.4-512-512-512-512 230.4-512 512zM950.857 512c0 241.371-197.486 438.857-438.857 438.857s-438.857-197.486-438.857-438.857c0-241.371 197.486-438.857 438.857-438.857s438.857 197.486 438.857 438.857z" />
        </svg>
              <span>Previous item</span>
            </a>
            {% endif %}
          </p>
          
          <p id="back"><a href="/" style="display: inline; margin: 0 auto;">Back to shop</a></p>
      
          <p id="next">
            {% if collection.next_product %}
            <a style="float: right" href="{{collection.next_product }}">
              <span>Next item</span>
              <svg id="icon-arrow_small_right_idle" viewBox="0 0 1024 1024">
            <path class="path1" d="M537.6 285.257l-51.2 51.2 149.943 138.971h-380.343v73.143h380.343l-149.943 138.971 51.2 51.2 248.686-226.743z" />
            <path class="path2" d="M1024 512c0-281.6-230.4-512-512-512s-512 230.4-512 512 230.4 512 512 512 512-230.4 512-512zM73.143 512c0-241.371 197.486-438.857 438.857-438.857s438.857 197.486 438.857 438.857c0 241.371-197.486 438.857-438.857 438.857s-438.857-197.486-438.857-438.857z" />
          </svg>
            </a>
            {% endif %}
          </p>
        </div>
        {% else %}
        <div id="projectnav" style="text-align: center">
          <p id="back" style="float: none; width: auto;"><a href="/" style="display: inline; margin: 0 auto;">Back to shop</a></p>
        </div>
        {% endif %}

        {% comment %}
        Create thumbnails if we have more than one product image
        {% endcomment %}
        <ul class="product-photo-thumbs" id="productThumbs">
        {% if product.images.size > 1 %}

            {% for image in product.images %}
              <li class="grid-item">
                <a href="{{ image.src | img_url: '1024x1024' }}" class="product-photo-thumb">
                  <img src="{{ image.src | img_url: 'compact' }}" alt="{{ image.alt | escape }}">
                </a>
              </li>
            {% endfor %}
            
            <li class="grid-item share small--hide" style="overflow: hidden">
              <a id="cvgfb" href="https://www.facebook.com/sharer/sharer.php?u={{ shop.url }}{{ product.url }}">
                <svg x="0px" y="0px" width="32px" height="32px" viewBox="0 0 7.68 7.68" enable-background="new 0 0 7.68 7.68" xml:space="preserve">
                  <g id="Layer_17">
                    <circle fill-rule="evenodd" clip-rule="evenodd" fill="#1A6AA5" cx="3.85" cy="3.85" r="3.85"/>
                    <g id="Shape_2_3_">
                      <g>
                        <path fill="#FFFFFF" d="M4.123,3.195l0.001-0.33c0-0.173,0.011-0.265,0.242-0.265h0.31V1.94H4.181
                    c-0.595,0-0.732,0.328-0.732,0.867L3.45,3.195H3v0.66H3.45v1.915h0.673V3.855h0.49l0.066-0.66H4.123z"/>
                        </g>
                      </g>
                    </g>
                </svg>
              </a>
              <script>
  window.fbAsyncInit = function() {
    FB.init({
      appId      : '560942770677358',
      xfbml      : true,
      version    : 'v2.1'
    });

    $(function(){
      $("#cvgfb").click(function(e){
        e.preventDefault();
        FB.ui({
          method: 'share',
          href: '{{ shop.url }}{{ product.url }}'
        });
      })
    })
  };

  (function(d, s, id){
   var js, fjs = d.getElementsByTagName(s)[0];
   if (d.getElementById(id)) {return;}
   js = d.createElement(s); js.id = id;
   js.src = "//connect.facebook.net/en_US/sdk.js";
   fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

</script>
            </li>

            <li class="grid-item share small--hide">
              <a href="https://twitter.com/intent/tweet?url={{ shop.url }}{{ product.url }}&via=Shimell_Madden&text={{ product.title | escape }}">
                <svg x="0px" y="0px" width="32px" height="32px" viewBox="0 0 7.68 7.68" enable-background="new 0 0 7.68 7.68" xml:space="preserve">
                  <g id="Layer_17">
                    <circle fill-rule="evenodd" clip-rule="evenodd" fill="#00B4F0" cx="3.85" cy="3.85" r="3.85"/>
                    <g id="Shape_1_3_">
                      <g>
                        <path fill="#FFFFFF" d="M6.12,2.372c-0.168,0.077-0.349,0.13-0.538,0.153c0.193-0.121,0.342-0.311,0.412-0.538
                            C5.813,2.1,5.612,2.18,5.399,2.223C5.229,2.035,4.985,1.916,4.717,1.916c-0.517,0-0.936,0.436-0.936,0.972
                            c0,0.076,0.008,0.15,0.024,0.222C3.028,3.068,2.338,2.682,1.876,2.094C1.796,2.238,1.75,2.404,1.75,2.582
                            c0,0.338,0.165,0.635,0.416,0.809C2.013,3.386,1.869,3.342,1.742,3.27v0.012c0,0.471,0.322,0.863,0.75,0.953
                            C2.414,4.256,2.332,4.268,2.246,4.268c-0.06,0-0.119-0.006-0.176-0.017c0.12,0.386,0.465,0.666,0.875,0.674
                            c-0.32,0.261-0.724,0.416-1.162,0.416c-0.076,0-0.15-0.005-0.223-0.014c0.414,0.275,0.906,0.437,1.434,0.437
                            c1.722,0,2.662-1.48,2.662-2.764c0-0.042-0.001-0.084-0.003-0.125C5.836,2.737,5.994,2.566,6.12,2.372z"/>
                      </g>
                    </g>
                  </g>
                </svg>
              </a>
              <script type="text/javascript" src="//platform.twitter.com/widgets.js"></script>
            </li>

            <li class="grid-item share small--hide">
              <a target="_blank" href="//pinterest.com/pin/create/button/?url={{ shop.url }}{{ product.url }}&media=http:{{ product.featured_image | product_img_url: '1024x1024' | split: '?' | first }}&description={{ product.title | strip_html | escape | replace: ' ', '%20' }}{% for t in product.tags %}{% assign tag = t | handle %}{{ '%20%23' | append: tag }}{% endfor %}">
                <svg id="pinterest" viewBox="0 0 100 100" style="height: 32px; width: 32px;"><circle class="outer-shape" cx="50" cy="50" r="50" style="opacity: 1; fill: #c0120b;"></circle>
                  <path class="inner-shape" style="opacity: 1; fill: rgb(255, 255, 255);" transform="translate(25,25) scale(0.5)" d="M50.001,1.489C22.94,1.489,0.999,23.208,0.999,50c0,19.864,12.066,36.929,29.331,44.432 c-0.138-3.388-0.024-7.454,0.853-11.14c0.942-3.939,6.305-26.433,6.305-26.433s-1.566-3.098-1.566-7.676 c0-7.188,4.209-12.558,9.451-12.558c4.457,0,6.61,3.314,6.61,7.283c0,4.435-2.858,11.071-4.327,17.215 c-1.228,5.146,2.606,9.343,7.734,9.343c9.285,0,15.537-11.805,15.537-25.791c0-10.633-7.233-18.59-20.39-18.59 c-14.864,0-24.124,10.974-24.124,23.232c0,4.226,1.258,7.207,3.23,9.515c0.906,1.06,1.032,1.488,0.704,2.704 c-0.235,0.893-0.775,3.042-0.999,3.894c-0.326,1.229-1.332,1.668-2.453,1.214C20.05,63.877,16.861,56.455,16.861,48.11 c0-13.781,11.739-30.304,35.022-30.304c18.708,0,31.021,13.403,31.021,27.79c0,19.029-10.687,33.247-26.44,33.247 c-5.289,0-10.266-2.831-11.971-6.047c0,0-2.845,11.177-3.448,13.335c-1.039,3.74-3.072,7.478-4.932,10.392 C40.52,97.81,45.175,98.511,50,98.511c27.059,0,49-21.719,49-48.511S77.06,1.489,50.001,1.489z"></path>
                </svg>
              </a>
            </li>

        {% endif %}
         </ul>
      </div>
    </div>

    <div class="grid-item large--one-quarter">

    {% comment %}   =====   TITLE   =====   {% endcomment %}
      <h1 itemprop="name">{{ product.title }}</h1>

    {% comment %}   =====   PRICE   =====   {% endcomment %}
      <span id="productPrice" class="h2{% if product.compare_at_price > product.price %} on-sale{% endif %}" itemprop="price">
        {{ product.price | money }}
      </span>

    {% comment %}   =====   DESCRIPTION   =====   {% endcomment %}
      <div class="product-description rte" itemprop="description">
        {{ product.description }}
      </div>

    {% comment %}
      ID addToCartForm is a selector for the ajaxify cart plugin
    {% endcomment %}
    <form action="/cart/add" method="post" enctype="multipart/form-data" id="addToCartForm">

    {% comment %}   =====   QUANTITY   =====   {% endcomment %}
      {% comment %}<label for="quantity" class="quantity-selector">Quantity</label>{% endcomment %}
          <input type="number" id="quantity" name="quantity" value="1" min="1" class="quantity-selector">


    {% comment %}   =====   VARIANTS   =====   {% endcomment %}

        {% comment %}
          Get first variant, or deep linked one
        {% endcomment %}
        {% assign variant = product.selected_or_first_available_variant %}

        

          {% comment %}
            Add product variants as a dropdown.
              - By default, each variant (or combination of variants) will display as its own <option>
              - To separate these into multiple steps, which we suggest, use option_selection.js (see below)

            You can leverage jQuery to add a callback on page load and each time the select element changes:
              - Include option_selection.js (as seen at the bottom of this file)
              - This allows you to use JavaScript anytime the variant dropdown changes
              - This also separates out your variant options (ie. size, color, etc.) to separate select elements

            For more information on products with multiple options, visit:
              - http://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options#update-product-liquid

          {% endcomment %}
          <select name="id" id="productSelect" class="product-variants">
            {% for variant in product.variants %}
                {% comment %}
                  Note: if you use option_selection.js, your <select> tag will be overwritten, meaning what you have inside <option> will not reflect what you coded below.
                {% endcomment %}
                <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money_with_currency }}</option>
            {% endfor %}
          </select>
        {% comment %}   =====   END VARIANTS   =====   {% endcomment %}
          

          

        {% comment %}   =====   SUBMIT FORM   =====   {% endcomment %}
          <button type="submit" name="add" id="addToCart" class="btn">
            <span id="addToCartText"></span>
          </button>
        </form>
        
        <div class="grid" style="margin: 15px 0">
          <div class="extra-info" id="size-chart-trigger">Sizing</div>
          <div class="extra-info" id="shipping-info-trigger">Shipping</div>
        </div>
    </div>
  </div>
</div>


{% comment %}
  To take advantage of a callback on the select dropdown, add option_selection.js
  and customize the JS below as you need. This is only needed on pages where
  product variants are accessible, so doesn't need to live in theme.liquid.

  Currently, the code below does:
    - Hides your <select> tag from above
    - Breaks out the product variants into separate product options, if more than one exists
    - Generates a <select> tag for each product option

  Callback notes:
    - Keep the callback available to the global scope (window.selectCallback) so that advanced
      addons can override it.
      * E.g. multiple currencies http://docs.shopify.com/manual/configuration/store-customization/currencies-and-translations/currencies/how-to-toggle-between-two-currencies
{% endcomment %}

{{ 'option_selection.js' | shopify_asset_url | script_tag }}
<script>
  var selectCallback = function(variant, selector) {

    var $addToCart = $('#addToCart'),
        $productPrice = $('#productPrice'),
        $comparePrice = $('#comparePrice'),
        $quantityElements = $('.quantity-selector, label + .js-qty'),
        $addToCartText = $('#addToCartText'),
        $featuredImage = $('#productPhotoImg');

    if (variant) {

      // Update variant image, if one is set
      // Call timber.switchImage function in shop.js
      if (variant.featured_image) {
        var newImg = variant.featured_image,
            el = $featuredImage[0];
        Shopify.Image.switchImage(newImg, el, timber.switchImage);
      }

      // Select a valid variant if available
      if (variant.available) {
        // We have a valid product variant, so enable the submit button
        $addToCart.removeClass('disabled').prop('disabled', false);
        $addToCartText.text('Add to Cart');
        $quantityElements.show();
      } else {
        // Variant is sold out, disable the submit button
        $addToCart.addClass('disabled').prop('disabled', true);
        $addToCartText.text('Sold Out');
        $quantityElements.hide();
      }

      // Regardless of stock, update the product price
      $productPrice.html( Shopify.formatMoney(variant.price, "{{ shop.money_format }}") );

      // Also update and show the product's compare price if necessary
      if ( variant.compare_at_price > variant.price ) {
        $comparePrice
          .html('Compare at: ' + Shopify.formatMoney(variant.compare_at_price, "{{ shop.money_format }}"))
          .show();
      } else {
        $comparePrice.hide();
      }

    } else {
      // The variant doesn't exist, disable submit button.
      // This may be an error or notice that a specific variant is not available.
      // To only show available variants, implement linked product options:
      //   - http://docs.shopify.com/manual/configuration/store-customization/advanced-navigation/linked-product-options
      $addToCart.addClass('disabled').prop('disabled', true);
      $addToCartText.text('Unavailable');
      $quantityElements.hide();
    }
  };

  jQuery(function($) {
    new Shopify.OptionSelectors('productSelect', {
      product: {{ product | json }},
      onVariantSelected: selectCallback,
      enableHistoryState: true
    });

    // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.selector-wrapper:eq(0)').prepend('<label>{{ product.options.first | escape }}</label>');
    {% endif %}

    // Hide selectors if we only have 1 variant and its title contains 'Default'.
    {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
      $('.selector-wrapper').hide();
    {% endif %}
  });
</script>
